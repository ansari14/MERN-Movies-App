pipeline {
    agent any
    
    environment {
        HARBOR_REGISTRY = "172.16.0.75"
        HARBOR_PROJECT = "mern-movies"
        DOCKER_IMAGE_FRONTEND = "${HARBOR_REGISTRY}/${HARBOR_PROJECT}/frontend"
        DOCKER_IMAGE_BACKEND = "${HARBOR_REGISTRY}/${HARBOR_PROJECT}/backend"
        BUILD_VERSION = "v1.${BUILD_NUMBER}"
    }
    
    stages {
        stage("Cleanup Workspace") {
            steps {
                cleanWs()
                sh "ls -la"
            }
        }
        
        stage("Clone Code") {
            steps {
                git branch: 'main',
                    url: 'https://github.com/ansari14/MERN-Movies-App.git'
                sh "ls -la"
            }
        }
        
        stage("Build Frontend Image") {
            steps {
                dir("frontend") {
                    sh "docker build -t ${DOCKER_IMAGE_FRONTEND}:${BUILD_VERSION} . && docker tag ${DOCKER_IMAGE_FRONTEND}:${BUILD_VERSION} ${DOCKER_IMAGE_FRONTEND}:latest"
                }
            }
        }
        
        stage("Build Backend Image") {
            steps {
                dir("backend") {
                    sh "docker build -t ${DOCKER_IMAGE_BACKEND}:${BUILD_VERSION} . && docker tag ${DOCKER_IMAGE_BACKEND}:${BUILD_VERSION} ${DOCKER_IMAGE_BACKEND}:latest"
                }
            }
        }
        
        stage("Push to Harbor") {
            steps {
                sh """
                    docker login ${HARBOR_REGISTRY} -u admin -p Harbor12345
                    docker push ${DOCKER_IMAGE_FRONTEND}:${BUILD_VERSION}
                    docker push ${DOCKER_IMAGE_FRONTEND}:latest
                    docker push ${DOCKER_IMAGE_BACKEND}:${BUILD_VERSION}
                    docker push ${DOCKER_IMAGE_BACKEND}:latest
                """
            }
        }
        
        stage("Cleanup Images") {
            steps {
                sh """
                    docker rmi ${DOCKER_IMAGE_FRONTEND}:${BUILD_VERSION}
                    docker rmi ${DOCKER_IMAGE_FRONTEND}:latest
                    docker rmi ${DOCKER_IMAGE_BACKEND}:${BUILD_VERSION}
                    docker rmi ${DOCKER_IMAGE_BACKEND}:latest
                """
            }
        }
    }
} 